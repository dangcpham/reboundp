# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: reboundp (Python)

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    name: Python tests on ${{ matrix.os }} (${{ matrix.python-version }})
    if: always()
    timeout-minutes: 10

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-11]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies for testing
      run: |
        python -m pip install --upgrade pip
        pip install numpy
    - name: Build package
      run: pip install -e .
    - name: Output package contents
      run: |
        pip show reboundp -vf
    - name: Unittests for base installation
      run: |
        python -m unittest tests/test_environment/test_features_base.py -v
    - name: Unittests to check for REBOUND 3 compatability
      run: |
        pip install 'rebound<4.0.0'
        python -m unittest tests/test_environment/test_features_rebound3.py -v
        pip uninstall --y rebound
    - name: Unittests to check general functionalities and port features
      run: |
        pip install urllib3 'rebound>=4.0.0'
        python -m unittest discover -s tests/ -v
        python -m unittest tests/test_environment/test_features_port.py -v
